$OnText
Dispatch and investment optimization for French power sector considering the year 2050
Behrang SHIRIZADEH August 2019
$Offtext
*-------------------------------------------------------------------------------
*                                Defining the sets
*-------------------------------------------------------------------------------
sets     h                                               /0*8759/
         hh(h)                                           /0*8758/
         r               'regions'                       /1*4/
         first(h)        'first hour'
         last(h)         'last hour'
         m               'month'                         /1*12/
         tec             'technology'                    /offshore, onshore, pv, river, lake, biogas, gas, phs, battery, methanation, interco/
         gen(tec)        'power plants'                  /offshore, onshore, pv, river, lake, biogas, gas/
         vre(tec)        'variable tecs'                 /offshore, onshore, pv, river/
         ncomb(tec)      'non-combustible generation'    /offshore, onshore, pv, river, lake, phs, battery, interco/
         comb(tec)       'combustible generation techs'  /biogas, methanation/
         str(tec)        'storage technologies'          /phs, battery, methanation/
         frr(tec)        'technologies for upward FRR'   /lake, phs, battery, gas/
;
first(h) = ord(h)=1;
last(h) = ord(h)=card(h);
alias(h,t);
alias(r,rr);
*-------------------------------------------------------------------------------
*                                Inputs
*-------------------------------------------------------------------------------
$offlisting
$ondelim
parameter month(h) 'Production profiles of VRE'
/
$include  inputs/month.csv
/;
parameter load_factor(vre,r,h) 'Production profiles of VRE'
/
$include  inputs/vre_profiles2006_regional.csv
/;
parameter demand(r,h) 'demand profile in each hour in GW'
/
$include inputs/demand2050_ademe_4regions.csv
/;
Parameter lake_inflows(m) 'monthly lake inflows in GWh'
/
$include  inputs/lake_inflows.csv
/ ;
Parameter river(h) 'monthly lake inflows in GWh'
/
$include  inputs/run_of_river.csv
/ ;
parameter epsilon(vre) 'additional FRR requirement for variable renewable energies because of forecast errors'
/
$include  inputs/reserve_requirements.csv
/ ;
parameter interco_ex(r,rr) 'existing capacities of the technologies by December 2017 in GW'
/
$include  inputs/existing_interconnections.csv
/ ;
parameter capa_max(tec,r) 'maximum capacities of the technologies in GW'
/
$include  inputs/maximum_capacities.csv
/ ;
parameter capex(tec) 'annualized power capex cost in M€/GW/year'
/
$include  inputs/annuities.csv
/ ;
parameter capex_en(str) 'annualized energy capex cost of storage technologies in M€/GWh/year'
/
$include  inputs/str_annuities.csv
/ ;
parameter fOM(tec) 'annualized fixed operation and maintenance costs M€/GW/year'
/
$include  inputs/fO&M.csv
/ ;
Parameter vOM(tec) 'Variable operation and maintenance costs in M€/GWh'
/
$include  inputs/vO&M.csv
/ ;
$offdelim
$onlisting
parameter fixed_costs(tec) 'yearly fixed cost of each tec in M€/GW/year' ;
fixed_costs(tec) = capex(tec) + fOM(tec);
parameter s_capex(str) 'charging related annuity of storage in M€/GW/year' /PHS 0, battery 0, methanation 96.2312131/;
parameter s_opex(str)    'charging related fOM of storage in M€/GW/year'   /PHS 0, battery 0, methanation 59.25/;
parameter eta_in(str) 'charging efifciency of storage technologies' /PHS 0.95, battery 0.9, methanation 0.59/;
parameter eta_out(str) 'discharging efficiency of storage technolgoies' /PHS 0.9, battery 0.95, methanation 0.45/;
parameter max_phs(r) /1 29.34,2 0,3 113.48,4 37.17/;
scalar max_biogas 'maxium energy can be generated by biogas in TWh' /15/;
scalar load_uncertainty 'uncertainty coefficient for hourly demand' /0.01/;
scalar delta 'load variation factor'     /0.1/;
scalar eta_interco /0.975/;
scalar invest_interco /17.44/;
scalar fom_interco /5.4/;
parameter capa_ex(tec,r);
capa_ex('lake',r) = capa_max('lake',r);
capa_ex('river',r) = capa_max('river',r);
capa_ex('phs',r) = capa_max('phs',r)*4.94/9.3;
*-------------------------------------------------------------------------------
*                                Model
*-------------------------------------------------------------------------------
variables        GENE(tec,r,h)     'hourly energy generation in TWh'
                 CAPA(tec,r)       'overal yearly installed capacity in GW'
                 STORAGE(str,r,h)  'hourly electricity input of battery storage GW'
                 S(str,r)          'charging power capacity of each storage technology'
                 STORED(str,r,h)   'energy stored in each storage technology in GWh'
                 CAPACITY(str,r)   'energy volume of storage technologies in GWh'
                 RSV(frr,r,h)      'required upward frequency restoration reserve in GW'
                 INTERCAPA(r,rr)
                 FLOW(r,rr,h)      'the electricity flow from one region to another one in GWh'
                 COST              'final investment cost in b€'

positive variables GENE(tec,r,h),CAPA(tec,r),STORAGE(str,r,h), S(str,r),STORED(str,r,h),FLOW(r,rr,h),INTERCAPA(r,rr), CAPACITY(str,r),RSV(frr,r,h);

equations        gene_vre        'variables renewable profiles generation'
                 gene_capa       'capacity and genration relation for technologies'
                 combustion      'the relationship of combustible technologies'
                 capa_frr        'capacity needed for the secondary reserve requirements'
                 storing         'the definition of stored energy in the storage options'
                 storage_const   'storage in the first hour is equal to the storage in the last hour'
                 lake_res        'constraint on water for lake reservoirs'
                 stored_cap      'maximum energy that is stored in storage units'
                 storage_capa1   'the capacity with hourly charging relationship of storage'
                 storage_capa2   'storage power limit'
                 biogas_const    'maximum energy can be produced by biogas'
                 reserves        'FRR requirement'
                 interconnections
                 capa_connection
                 interco_capa
                 adequacy        'supply/demand relation'
                 obj             'the final objective function which is COST';

gene_vre(vre,r,h)..                GENE(vre,r,h)             =e=     CAPA(vre,r)*load_factor(vre,r,h);
gene_capa(tec,r,h)..               CAPA(tec,r)               =g=     GENE(tec,r,h);
combustion(h,r)..                  GENE('gas',r,h)           =e=     GENE('biogas',r,h)+ GENE('methanation',r,h);
capa_frr(frr,r,h)..                CAPA(frr,r)               =g=     GENE(frr,r,h) + RSV(frr,r,h);
storing(str,r,h,h+1)..             STORED(str,r,h+1)         =e=     STORED(str,r,h) + STORAGE(str,r,h)*eta_in(str) - GENE(str,r,h)/eta_out(str);
storage_const(str,r,first,last)..  STORED(str,r,first)       =e=     STORED(str,r,last) + STORAGE(str,r,last)*eta_in(str) - GENE(str,r,last)/eta_out(str);
lake_res(r,m)..                    lake_inflows(m)*capa_max('lake',r)/13.457 =g=     sum(h$(month(h) = ord(m)),GENE('lake',r,h))/1000;
stored_cap(str,r,h)..              STORED(str,r,h)           =l=     CAPACITY(str,r);
storage_capa1(str,r,h)..           S(str,r)                  =g=     STORAGE(str,r,h);
storage_capa2(str,r)..             S(str,r)                  =l=     CAPA(str,r);
biogas_const..                     sum((h,r),GENE('biogas',r,h)) =l=     max_biogas*1000;
reserves(h,r)..                    sum(frr, RSV(frr,r,h))    =e=     sum(vre,epsilon(vre)*CAPA(vre,r))+ demand(r,h)*load_uncertainty*(1+delta);
interco_capa(r,rr)..               INTERCAPA(r,rr)           =e=     INTERCAPA(rr,r);
interconnections(r,h)..            GENE('interco',r,h)       =e=     sum(rr,FLOW(rr,r,h))*eta_interco;
capa_connection(r,rr,h)..          INTERCAPA(r,rr)           =g=     FLOW(r,rr,h);
adequacy(h,r)..                    sum(ncomb,GENE(ncomb,r,h))+GENE('gas',r,h)   =g=     demand(r,h) + sum(str,STORAGE(str,r,h)) +sum(rr,FLOW(r,rr,h));
obj..                              COST                    =e=     (sum((r,tec),(CAPA(tec,r)-capa_ex(tec,r))*capex(tec))+sum((r,rr),((INTERCAPA(r,rr)-interco_ex(r,rr))*invest_interco)+(INTERCAPA(r,rr)*fom_interco))/2 + sum((str,r),CAPACITY(str,r)*capex_en(str))+sum((tec,r),(CAPA(tec,r)*fOM(tec)))+ sum((str,r),S(str,r)*(s_capex(str)+s_opex(str))) + sum((tec,r,h),GENE(tec,r,h)*vOM(tec)))/1000;
*-------------------------------------------------------------------------------
*                                Initial and fixed values
*-------------------------------------------------------------------------------
CAPA.fx('phs',r) = capa_max('phs',r);
CAPA.fx('river',r)= capa_max('river',r);
CAPA.fx('lake',r) = capa_max('lake',r);
S.fx('phs',r) = capa_max('phs',r);
CAPACITY.fx('phs',r) = max_phs(r);
CAPA.up(vre,r) = capa_max(vre,r);
INTERCAPA.lo(r,rr) = interco_ex(r,rr);
STORAGE.up('phs',r,h) =capa_max('phs',r);
GENE.up('river',r,h) = capa_max('river',r)*river(h);
*-------------------------------------------------------------------------------
*                                Model options
*-------------------------------------------------------------------------------
model EOLES_4regions /all/;
*-------------------------------------------------------------------------------
$onEOLCom
option solvelink=0;
option RESLIM = 1000000;
option lp=CPLEX;
option Savepoint=1;
option solveopt = replace;
option limcol = 0;
option limrow = 0;
option SOLPRINT = OFF;
$offEOLCom
*-------------------------------------------------------------------------------
*                                Solve statement
*-------------------------------------------------------------------------------
$If exist EOLES_4regions_p.gdx execute_loadpoint 'EOLES_4regions_p';
Solve EOLES_4regions using lp minimizing COST;
*-------------------------------------------------------------------------------
*                                Display statement
*-------------------------------------------------------------------------------
parameter sumdemand      'the whole demand per year in TWh';
sumdemand =  sum((r,h),demand(r,h))/1000;
parameter gene_tec(tec,r) 'Overall yearly energy generated by the technology in TWh';
gene_tec(tec,r) = sum(h,GENE.l(tec,r,h))/1000;
parameter sumgene(r)        'the whole generation per year in TWh';
sumgene(r) = sum((gen,h),GENE.l(gen,r,h))/1000 - gene_tec('gas',r);
parameter sum_FRR 'the whole yearly energy budgeted for reserves in TWh';
sum_FRR = sum((h,r,frr),RSV.l(frr,r,h))/1000;
parameter reserve(frr,r) 'capacity allocated for reserve from each FRR tech in GW';
reserve(frr,r) = smax(h,RSV.l(frr,r,h));
Parameter lcoe(gen,r);
lcoe(gen,r) = (CAPA.l(gen,r)*(fOM(gen)+capex(gen))+ gene_tec(gen,r)*vOM(gen)*1000)/gene_tec(gen,r);
parameter lcoe_sys1;
lcoe_sys1 = cost.l*1000/sum(r,sumgene(r));
parameter lcoe_sys2;
lcoe_sys2 = cost.l*1000/sumdemand;
parameter lcos(str,r);
lcos(str,r) = (CAPA.l(str,r)*(fOM(str)+capex(str))+ gene_tec(str,r)*vOM(str)*1000 + S.l(str,r)*(s_capex(str)+s_opex(str))+ CAPACITY.l(str,r)*capex_en(str))/gene_tec(str,r);
parameter cf(gen,r) 'load factor of generation technologies';
cf(gen,r) = gene_tec(gen,r)*1000/(8760*CAPA.l(gen,r));
parameter str_loss 'yearly storage related loss in % of power production';
str_loss = (sum((str,r,h),STORAGE.l(str,r,h))-sum((str,r),gene_tec(str,r)*1000))/sum(r,sumgene(r)*10);
parameter lc 'load curtailment of the network';
lc = ((sum(r,sumgene(r)) - sumdemand)*100/sum(r,sumgene(r))) - str_loss;
parameter spot_price(r,h) 'marginal cost'    ;
spot_price(r,h) = 1000000*adequacy.m(r,h);
parameter marginal_cost(r) 'average value over the year of spot price in €/MWh';
marginal_cost(r) = sum(h,spot_price(r,h))/8760;
parameter gas_price(r,h) 'the dual for the biogas constraint' ;
gas_price(r,h) = -1000000*combustion.m(r,h);
parameter RtoRR(r,rr) 'annual energy transfer from region r to region rr';
RtoRR(r,rr) = sum(h,FLOW.l(r,rr,h))/1000;
*-------------------------------------------------------------------------------
display cost.l;
display capa.l;
display sumdemand;
display sumgene;
display gene_tec;
display sum_FRR;
display lcoe;
display lcoe_sys1;
display lcoe_sys2;
display lcos;
display CAPACITY.l;
display cf;
display lc;
display str_loss;
display marginal_cost;
display S.l;
display RtoRR;
*-------------------------------------------------------------------------------
*                                Output
*-------------------------------------------------------------------------------
$Ontext
two main output files;
The .txt file just to have a summary and general idea of the key numbers
The .csv file to have a fine output with hourly data for final data processing and analysis
$Offtext
*-------------------------------------------------------------------------------
file results /'outputs/100%RES/4regions.txt'/ ;
*the .txt file
put results;
results.nd = 4;
put '   the main results ' //
//
'I)Overall investment cost is' cost.l 'b€' //
//
'II)the Renewable capacity ' //
'Offshore1                'CAPA.l('offshore','1')'    GW'//
'Offshore2                'CAPA.l('offshore','2')'    GW'//
'Offshore3                'CAPA.l('offshore','3')'    GW'//
'Offshore4                'CAPA.l('offshore','4')'    GW'//
'onsore1                  'CAPA.l('onshore','1')'     GW' //
'onsore2                  'CAPA.l('onshore','2')'     GW' //
'onsore3                  'CAPA.l('onshore','3')'     GW' //
'onsore4                  'CAPA.l('onshore','4')'     GW' //
'PV1                      'CAPA.l('PV','1')'  GW'//
'PV2                      'CAPA.l('PV','2')'  GW'//
'PV3                      'CAPA.l('PV','3')'  GW'//
'PV4                      'CAPA.l('PV','4')'  GW'//
'run of river1            'CAPA.l('river','1') 'GW' //
'run of river2            'CAPA.l('river','2') 'GW' //
'run of river3            'CAPA.l('river','3') 'GW' //
'run of river4            'CAPA.l('river','4') 'GW' //
'lake1                    'CAPA.l('lake','1') 'GW' //
'lake2                    'CAPA.l('lake','2') 'GW' //
'lake3                    'CAPA.l('lake','3') 'GW' //
'lake4                    'CAPA.l('lake','4') 'GW' //
'biogas1                  'CAPA.l('biogas','1')' GW'//
'biogas2                  'CAPA.l('biogas','2')' GW'//
'biogas3                  'CAPA.l('biogas','3')' GW'//
'biogas4                  'CAPA.l('biogas','4')' GW'//
'gas1                     'CAPA.l('gas','1')' GW'//
'gas2                     'CAPA.l('gas','2')' GW'//
'gas3                     'CAPA.l('gas','3')' GW'//
'gas4                     'CAPA.l('gas','4')' GW'//
'Battery1                 'CAPA.l('battery','1')' GW'//
'Battery2                 'CAPA.l('battery','2')' GW'//
'Battery3                 'CAPA.l('battery','3')' GW'//
'Battery4                 'CAPA.l('battery','4')' GW'//
'PHS1                     'CAPA.l('phs','1')' GW'//
'PHS2                     'CAPA.l('phs','2')' GW'//
'PHS3                     'CAPA.l('phs','3')' GW'//
'PHS4                     'CAPA.l('phs','4')' GW'//
'methanation1             'CAPA.l('methanation','1')' GW'//
'methanation2             'CAPA.l('methanation','2')' GW'//
'methanation3             'CAPA.l('methanation','3')' GW'//
'methanation4             'CAPA.l('methanation','4')' GW'//
'interco12                'INTERCAPA.l('1','2')//
'interco13                'INTERCAPA.l('1','3')//
'interco14                'INTERCAPA.l('1','4')//
'interco23                'INTERCAPA.l('2','3')//
'interco24                'INTERCAPA.l('2','4')//
'interco34                'INTERCAPA.l('3','4')//
//
//
'III)Needed storage volume and storage charging power' //
'Battery1         'CAPACITY.l('battery','1')'       GWh' //
'Battery2         'CAPACITY.l('battery','2')'       GWh' //
'Battery3         'CAPACITY.l('battery','3')'       GWh' //
'Battery4         'CAPACITY.l('battery','4')'       GWh' //
'PHS1             'CAPACITY.l('phs','1')'       GWh'//
'PHS2             'CAPACITY.l('phs','2')'       GWh'//
'PHS3             'CAPACITY.l('phs','3')'       GWh'//
'PHS4             'CAPACITY.l('phs','4')'       GWh'//
'methane1         'CAPACITY.l('methanation','1')'   GWh'//
'methane2         'CAPACITY.l('methanation','2')'   GWh'//
'methane3         'CAPACITY.l('methanation','3')'   GWh'//
'methane4         'CAPACITY.l('methanation','4')'   GWh'//
'Battery1         'S.l('battery','1')'       GW' //
'Battery2         'S.l('battery','2')'       GW' //
'Battery3         'S.l('battery','3')'       GW' //
'Battery4         'S.l('battery','4')'       GW' //
'PHS1             'S.l('phs','1')'       GW'//
'PHS2             'S.l('phs','2')'       GW'//
'PHS3             'S.l('phs','3')'       GW'//
'PHS4             'S.l('phs','4')'       GW'//
'methane1         'S.l('methanation','1')'   GW'//
'methane2         'S.l('methanation','2')'   GW'//
'methane3         'S.l('methanation','3')'   GW'//
'methane4         'S.l('methanation','4')'   GW'//
//
'IV)Overall yearly energy generation of each technology'//
'Offshore1                'gene_tec('offshore','1')'    TWh'//
'Offshore2                'gene_tec('offshore','2')'    TWh'//
'Offshore3                'gene_tec('offshore','3')'    TWh'//
'Offshore4                'gene_tec('offshore','4')'    TWh'//
'onsore1                  'gene_tec('onshore','1')'     TWh' //
'onsore2                  'gene_tec('onshore','2')'     TWh' //
'onsore3                  'gene_tec('onshore','3')'     TWh' //
'onsore4                  'gene_tec('onshore','4')'     TWh' //
'PV1                      'gene_tec('PV','1')'  TWh'//
'PV2                      'gene_tec('PV','2')'  TWh'//
'PV3                      'gene_tec('PV','3')'  TWh'//
'PV4                      'gene_tec('PV','4')'  TWh'//
'river1                   'gene_tec('river','1') 'TWh' //
'river2                   'gene_tec('river','2') 'TWh' //
'river3                   'gene_tec('river','3') 'TWh' //
'river4                   'gene_tec('river','4') 'TWh' //
'lake1                    'gene_tec('lake','1') 'TWh' //
'lake2                    'gene_tec('lake','2') 'TWh' //
'lake3                    'gene_tec('lake','3') 'TWh' //
'lake4                    'gene_tec('lake','4') 'TWh' //
'biogas1                  'gene_tec('biogas','1')' TWh'//
'biogas2                  'gene_tec('biogas','2')' TWh'//
'biogas3                  'gene_tec('biogas','3')' TWh'//
'biogas4                  'gene_tec('biogas','4')' TWh'//
'gas1                     'gene_tec('gas','1')'  TWh'//
'gas2                     'gene_tec('gas','2')'  TWh'//
'gas3                     'gene_tec('gas','3')'  TWh'//
'gas4                     'gene_tec('gas','4')'  TWh'//
'battery1                 'gene_tec('battery','1')' TWh'//
'battery2                 'gene_tec('battery','2')' TWh'//
'battery3                 'gene_tec('battery','3')' TWh'//
'battery4                 'gene_tec('battery','4')' TWh'//
'phs1                     'gene_tec('phs','1')'  TWh'//
'phs2                     'gene_tec('phs','2')'  TWh'//
'phs3                     'gene_tec('phs','3')'  TWh'//
'phs4                     'gene_tec('phs','4')'  TWh'//
'Methanation1             'gene_tec('methanation','1')'TWh'//
'Methanation2             'gene_tec('methanation','2')'TWh'//
'Methanation3             'gene_tec('methanation','3')'TWh'//
'Methanation4             'gene_tec('methanation','4')'TWh'//
'1to2             'RtoRR('1','2')'TWh'//
'1to3             'RtoRR('1','3')'TWh'//
'1to4             'RtoRR('1','4')'TWh'//
'2to3             'RtoRR('2','3')'TWh'//
'2to4             'RtoRR('2','4')'TWh'//
'3to4             'RtoRR('3','4')'TWh'//
//
'Load Curtailment' lc '% and the storage loss ' str_loss '%'//
//
'LCOE of the system is 'lcoe_sys1' €/MWh or 'lcoe_sys2' €/MWh '//
//
'capacity factors '//
'Offshore1                 'cf('offshore','1')//
'Offshore2                 'cf('offshore','2')//
'Offshore3                 'cf('offshore','3')//
'Offshore4                 'cf('offshore','4')//
'onsore1                   'cf('onshore','1')//
'onsore2                   'cf('onshore','2')//
'onsore3                   'cf('onshore','3')//
'onsore4                   'cf('onshore','4')//
'PV1                       'cf('pv','1') //
'PV2                       'cf('pv','2') //
'PV3                       'cf('pv','3') //
'PV4                       'cf('pv','4') //
'river1                    'cf('river','1') //
'river2                    'cf('river','2') //
'river3                    'cf('river','3') //
'river4                    'cf('river','4') //
'lake1                     'cf('lake','1') //
'lake2                     'cf('lake','2') //
'lake3                     'cf('lake','3') //
'lake4                     'cf('lake','4') //
'biogas1                   'cf('biogas','1')//
'biogas2                   'cf('biogas','2')//
'biogas3                   'cf('biogas','3')//
'biogas4                   'cf('biogas','4')//
'gas1                      'cf('gas','1')//
'gas2                      'cf('gas','2')//
'gas3                      'cf('gas','3')//
'gas4                      'cf('gas','4')//
//
;
*-------------------------------------------------------------------------------
$ontext
file hourly_generation /'outputs/100%RES/risk.csv' / ;
*Hourly power production, storage and market price profiles
parameter nSTORAGE(str,h);
nSTORAGE(str,h) = 0 - STORAGE.l(str,h);
put hourly_generation;
hourly_generation.pc=5;
hourly_generation.nd=10;
hourly_generation.pw=3000;
put 'hour'; loop(tec, put tec.tl;); put 'demand' , 'Pump' , 'ElecStr' , 'CH4' ,'Bat_SOC','PHS_SOC', 'CH4_SOC', 'elec_price','gas_price'/ ;
loop (h,
put h.tl; loop(tec,  put gene.l(tec,h);) put demand(h), nSTORAGE('PHS',h), nSTORAGE('battery',h), nSTORAGE('methanation',h),STORED.l('battery',h),STORED.l('phs',h),STORED.l('methanation',h), spot_price(h), gas_price(h)/
;);
$Offtext
$ontext
*Lagrange multipliers
file lagrange /'outputs/100%RES/Lagrange2006CH4.csv'/;
put lagrange;
lagrange.pc=5;
lagrange.nd=20;
lagrange.pw=3000;
put 'hour', 'lambda','gas','delta_CH4','eps1_CH4', 'nu_CH4', 'eps5_CH4', 'eps3_CH4','mu-s_CH4' /;
loop(h,
put h.tl, adequacy.m(h), combustion.m(h), gene_capa.m('methanation',h), storing.m('methanation',h,h+1),GENE.m('methanation',h), storage_const.m('methanation','0','8759'), storage_capa1.m('methanation',h),STORAGE.m('methanation',h)/
;);
file lagrangestr /'outputs/100%RES/Lagrange2006str.csv'/;
put lagrangestr;
lagrangestr.pc=5;
lagrangestr.nd=20;
lagrangestr.pw=3000;
put 'hour', 'hour','eps1metha','eps1batt' /;
loop((h,hh)$(ord(h)=ord(hh)+1),
put hh.tl,h.tl, storing.m('methanation',hh,h),storing.m('battery',hh,h)/
;);
$offtext
*-------------------------------------------------------------------------------
*                                The End :D
*-------------------------------------------------------------------------------
